@model IEnumerable<PowerRankings.Models.Season>

@{
    ViewBag.Title = "Seasons";
}

<div class="row">
    <div class="col-sm-10">
        <h2>Seasons</h2>
    </div>
    <div class="col-sm-2">
        @Html.ActionLink("New Season", "Create", null, new { @class = "btn btn-default pull-right" })    
    </div>
</div>
<hr />
<div class="row">
    <div class="col-sm-12">
        <h4>Active Seasons</h4>
    </div>
    <div class="col-sm-12">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        Sport
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        Teams
                    </th>
                    <th>
                        Games Played
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Where(x => !x.Deleted && x.Active).Any())
                {
                    foreach (var item in Model.Where(x => !x.Deleted && x.Active))
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.Name, "Details", "Seasons", new { id = item.SeasonId }, null)
                            </td>
                            <td>
                                @Html.ActionLink(item.Sport.Name, "Details", "Sports", new { id = item.Sport.SportId }, null)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @item.Teams.Count
                            </td>
                            <td>
                                @string.Format("{0} out of {1}", item.Games.Where(x => x.Included).Count(), item.Games.Count)
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">
                            There are no active seasons. 
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <h4>Inactive Seasons</h4>
    </div>
    <div class="col-sm-12">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        Sport
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        Teams
                    </th>
                    <th>
                        Games Played
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Where(x => !x.Deleted && !x.Active).Any())
                {
                    foreach (var item in Model.Where(x => !x.Deleted && !x.Active))
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.Name, "Details", "Seasons", new { id = item.SeasonId }, null)
                            </td>
                            <td>
                                @Html.ActionLink(item.Sport.Name, "Details", "Sports", new { id = item.Sport.SportId }, null)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @item.Teams.Count
                            </td>
                            <td>
                                @string.Format("{0} out of {1}", item.Games.Where(x => x.Included).Count(), item.Games.Count)
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">
                            There are no inactive seasons.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

